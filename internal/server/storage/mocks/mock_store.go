// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/wolf4b12/metrics-sv/internal/server/storage (interfaces: KVStorageInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKVStorageInterface is a mock of KVStorageInterface interface.
type MockKVStorageInterface struct {
	ctrl     *gomock.Controller
	recorder *MockKVStorageInterfaceMockRecorder
}

// MockKVStorageInterfaceMockRecorder is the mock recorder for MockKVStorageInterface.
type MockKVStorageInterfaceMockRecorder struct {
	mock *MockKVStorageInterface
}

// NewMockKVStorageInterface creates a new mock instance.
func NewMockKVStorageInterface(ctrl *gomock.Controller) *MockKVStorageInterface {
	mock := &MockKVStorageInterface{ctrl: ctrl}
	mock.recorder = &MockKVStorageInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKVStorageInterface) EXPECT() *MockKVStorageInterfaceMockRecorder {
	return m.recorder
}

// All mocks base method.
func (m *MockKVStorageInterface) All() map[string]interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "All")
	ret0, _ := ret[0].(map[string]interface{})
	return ret0
}

// All indicates an expected call of All.
func (mr *MockKVStorageInterfaceMockRecorder) All() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "All", reflect.TypeOf((*MockKVStorageInterface)(nil).All))
}

// Delete mocks base method.
func (m *MockKVStorageInterface) Delete(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Delete", arg0)
}

// Delete indicates an expected call of Delete.
func (mr *MockKVStorageInterfaceMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockKVStorageInterface)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockKVStorageInterface) Get(arg0 string) (interface{}, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockKVStorageInterfaceMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockKVStorageInterface)(nil).Get), arg0)
}

// Set mocks base method.
func (m *MockKVStorageInterface) Set(arg0 string, arg1 interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", arg0, arg1)
}

// Set indicates an expected call of Set.
func (mr *MockKVStorageInterfaceMockRecorder) Set(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockKVStorageInterface)(nil).Set), arg0, arg1)
}
